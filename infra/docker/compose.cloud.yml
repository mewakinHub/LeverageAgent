version: "3.9"
name: leverage-cloud
networks:
  proxy:
    driver: bridge
services:
  traefik:
    image: traefik:2.11
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --api.dashboard=true
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [proxy]
  n8n-main:
    image: docker.n8n.io/n8nio/n8n:latest
    environment:
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_HOST: n8n.${PUBLIC_DOMAIN}
      N8N_PROTOCOL: https
      WEBHOOK_URL: https://n8n.${PUBLIC_DOMAIN}/
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: ${POSTGRES_HOST}
      DB_POSTGRESDB_PORT: ${POSTGRES_PORT}
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      EXECUTIONS_MODE: queue
      QUEUE_BULL_REDIS_HOST: ${REDIS_HOST}
      QUEUE_BULL_REDIS_PORT: ${REDIS_PORT}
      N8N_LOG_LEVEL: ${N8N_LOG_LEVEL:-info}
    networks: [proxy]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.${PUBLIC_DOMAIN}`)"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
  n8n-worker:
    image: docker.n8n.io/n8nio/n8n:latest
    command: ["n8n","worker"]
    environment:
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: ${POSTGRES_HOST}
      DB_POSTGRESDB_PORT: ${POSTGRES_PORT}
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
      EXECUTIONS_MODE: queue
      QUEUE_BULL_REDIS_HOST: ${REDIS_HOST}
      QUEUE_BULL_REDIS_PORT: ${REDIS_PORT}
      N8N_LOG_LEVEL: ${N8N_LOG_LEVEL:-info}
    networks: [proxy]
  langgraph-api:
    build:
      context: ../services/langgraph-api
    environment:
      S3_ENDPOINT: ${S3_ENDPOINT:-}
      S3_BUCKET: ${S3_BUCKET}
      AWS_REGION: ${AWS_REGION}
      QDRANT_URL: ${QDRANT_URL}
    networks: [proxy]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.${PUBLIC_DOMAIN}`)"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
